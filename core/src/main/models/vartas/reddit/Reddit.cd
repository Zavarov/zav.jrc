package vartas.reddit;

import com.google.common.cache.Cache.Cache;
import java.lang.Exception.Exception;
import java.lang.String.String;
import java.time.Instant.Instant;
import java.util.List.List;
import java.util.Optional.Optional;
import org.apache.http.client.HttpResponseException.HttpResponseException;


public classdiagram Reddit {
    public abstract class Client {
        <<initializer="P1D">>
        - Cache<String, Subreddit> subreddits;
        <<initializer="P1D">>
        - Cache<String, Account> accounts;
    }

    public class Account extends Snowflake{
        - String name;
        - int linkKarma;
        - int commentKarma;
    }

    public abstract class Subreddit extends Snowflake{
        - String name;
        - String publicDescription;
        - int subscribers;
        - Optional<Integer> activeAccounts;
        - Optional<String> bannerImage;
        <<initializer="PT1H">>
        - Cache<String, Submission> submissions;

        public abstract List<Submission> getSubmissions(Instant inclusiveFrom, Instant exclusiveTo) throws UnsuccessfulRequestException, HttpResponseException;
        public abstract List<Submission> getUncheckedSubmissions(Instant inclusiveFrom, Instant exclusiveTo);
    }

    public abstract class Submission extends Snowflake{
        - Optional<String> thumbnail;
        - Optional<String> linkFlairText;
        - Optional<String> content;
        - String author;
        - String title;
        - String url;
        - int score;
        - boolean nsfw;
        - boolean spoiler;
        - List<Comment> rootComments;

        + abstract List<Comment> getAllComments();
        + abstract String getShortLink();
        + abstract String getQualifiedTitle();
        + abstract String getQualifiedPermaLink();
    }

    public abstract class Comment extends Snowflake{
        - String author;
        - String content;
        - int score;
        - List<Comment> children;

        + abstract Submission getSubmission();
        + abstract String getQualifiedPermaLink();
    }

    public abstract class Snowflake{
        - String id;
        - Instant created;
    }

    /**
     * This exception is thrown whenever a request couldn't be completed.
     */
    public class UnsuccessfulRequestException extends Exception{
    }
    /**
     * This exception is thrown whenever the Http response contained an error.
     */
    public abstract class ApiException extends UnsuccessfulRequestException{
        - int errorCode;
        - String explanation;
    }
    /**
     * This exception is thrown whenever a request was rejected by the server. Possible examples are the access of a
     * private subreddit without the necessary permissions. In any case, those exceptions have to be resolved, otherwise
     * the application may be blocked.
     */
    public class ClientException extends ApiException{}
    /**
     * This exception is thrown whenever a request failed due to a server error. Those may be triggered when the server
     * is unavailable or under high stress, in which case the request ought to be repeated.
     */
    public class ServerException extends ApiException{}
}