package proj.zav.jra.models;

import java.lang.Object.Object;
import java.lang.String.String;
import java.util.Optional.Optional;
import java.time.OffsetDateTime.OffsetDateTime;

import proj.zav.jra.models.VotableCreated.VotableCreated;

public classdiagram AbstractLink {

    public abstract class AbstractLink extends VotableCreated{
        /**
         * The account name of the poster. Empty if this is a promotional link
         */
        <<key="author">>
        - Optional<String> author;
        /**
         * The CSS class of the author's flair. Subreddit specific.
         * Empty if unflaired.
         */
        <<key="author_flair_css_class">>
        - Optional<String> authorFlairCssClass;
        /**
         * The text of the author's flair. Subreddit specific
         * Empty if unflaired.
         */
        <<key="author_flair_text">>
        - Optional<String> authorFlairText;
        /**
         * Probably always returns false.
         */
        <<key="clicked">>
        - boolean clicked;
        /**
         * The domain of this link. Self posts will be self.<subreddit> while other examples include
         * en.wikipedia.org and s3.amazon.com.
         */
        <<key="domain">>
        - String domain;
        /**
         * true if the post is hidden by the logged in user. false if not logged in or not hidden.
         */
        <<key="hidden">>
        - boolean hidden;
        /**
         * true if this link is a selfpost.
         */
        <<key="is_self">>
        - boolean isSelf;
        /**
         * The CSS class of the link's flair.
         * Empty if link is unflaired.
         */
        <<key="link_flair_css_class">>
        - Optional<String> linkFlairCssClass;
        /**
         * The text of the link's flair.
         * Empty if link is unflaired.
         */
        <<key="link_flair_text">>
        - Optional<String> linkFlairText;
        /**
         * Whether the link is locked (closed to new comments) or not.
         */
        <<key="locked">>
        - boolean locked;
        /**
         * Used for streaming video. Detailed information about the video and it's origins are placed here.
         */
        <<key="media">>
        - Optional<Object> media;
        /**
         * Used for streaming video. Technical embed specific information is found here.
         */
        <<key="media_embed">>
        - Object mediaEmbed;
        /**
         * The number of comments that belong to this link. includes removed comments.
         */
        <<key="num_comments">>
        - int numberOfComments;
        /**
         * true if the post is tagged as NSFW. false if otherwise.
         */
        <<key="over_18">>
        - boolean over18;
        /**
         * Relative URL of the permanent link for this link.
         */
        <<key="permalink">>
        - String permalink;
        /**
         * true if this post is saved by the logged in user.
         */
        <<key="saved">>
        - boolean saved;
        /**
         * The net-score of the link.
         * Note: A submission's score is simply the number of upvotes minus the number of downvotes. If five users like
         * the submission and three users don't it will have a score of 2. Please note that the vote numbers are not
         * "real" numbers, they have been "fuzzed" to prevent spam bots etc. So taking the above example, if five users
         * upvoted the submission, and three users downvote it, the upvote/downvote numbers may say 23 upvotes and 21
         * downvotes, or 12 upvotes, and 10 downvotes. The points score is correct, but the vote totals are "fuzzed".
         */
        <<key="score">>
        - int score;
        /**
         * The raw text. This is the unformatted text which includes the raw markup characters such as ** for bold.
         * <, >, and & are escaped. Empty if not present.
         */
        <<key="selftext">>
        - Optional<String> selftext;
        /**
         * The formatted escaped HTML text. This is the HTML formatted version of the marked up text. Items that are
         * boldened by ** or *** will now have <em> or *** tags on them. Additionally, bullets and numbered lists will
         * now be in HTML list format. NOTE: The HTML string will be escaped. You must unescape to get the raw HTML.
         * Empty if not present.
         */
        <<key="selftext_html">>
        - Optional<String> selftextHtml;
        /**
         * Subreddit of thing excluding the /r/ prefix. e.g. "pics".
         */
        <<key="subreddit">>
        - String subreddit;
        /**
         * The id of the subreddit in which the thing is located.
         */
        <<key="subreddit_id">>
        - String subredditId;
        /**
         * Full URL to the thumbnail for this link. Empty if the link doesn't have a thumbnail.
         */
        <<key="thumbnail">>
        - Optional<String> thumbnail;
        /**
         * The title of the link. may contain newlines for some reason.
         */
        <<key="title">>
        - String title;
        /**
         * The link of this post. the permalink if this is a self-post.
         */
        <<key="url">>
        - String url;
        /**
         * Indicates if link has been edited.
         * Will be the edit timestamp if the link has been edited and return empty otherwise.
         */
        <<key="edited">>
        - Optional<OffsetDateTime> edited;
        /**
         * To allow determining whether they have been distinguished by moderators/admins.
         * Empty = not distinguished.
         * Moderator = the green [M].
         * Admin = the red [A].
         * Special = various other special distinguishes
         * http://redd.it/19ak1b
         */
        <<key="distinguished">>
        - Optional<String> distinguished;
        /**
         * true if the post is set as the sticky in its subreddit.
         */
        <<key="stickied">>
        - boolean stickied;
        /**
         * true if the post is marked as spoiler.
         */
        <<key="spoiler">>
         - boolean spoiler;
    }
}